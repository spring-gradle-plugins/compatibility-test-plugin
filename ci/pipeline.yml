anchors:
  git-repo-resource-source: &git-repo-resource-source
    uri: ((github-repo))
    username: ((github-username))
    password: ((github-password))
    branch: ((branch))
  registry-image-source: &registry-image-source
    username: ((docker-hub-username))
    password: ((docker-hub-password))
  gradle-enterprise-task-params: &gradle-enterprise-task-params
    DEVELOCITY_ACCESS_KEY: ((gradle_enterprise_secret_access_key))
  artifactory-task-params: &artifactory-task-params
    ARTIFACTORY_SERVER: ((artifactory-server))
    ARTIFACTORY_USERNAME: ((artifactory-username))
    ARTIFACTORY_PASSWORD: ((artifactory-password))
  build-project-task-params: &build-project-task-params
    privileged: true
    timeout: ((task-timeout))
    file: git-repo/ci/tasks/build-project.yml
    params:
      BRANCH: ((branch))
      <<: *gradle-enterprise-task-params
  artifactory-repo-put-params: &artifactory-repo-put-params
    signing_key: ((signing-key))
    signing_passphrase: ((signing-passphrase))
    repo: plugins-snapshot-local
    folder: distribution-repository
    build_uri: "https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
    build_number: "${BUILD_PIPELINE_NAME}-${BUILD_JOB_NAME}-${BUILD_NAME}"
    disable_checksum_uploads: true
    threads: 8
resource_types:
- name: artifactory-resource
  type: registry-image
  source:
    <<: *registry-image-source
    repository: springio/artifactory-resource
    tag: 0.0.17
- name: github-status-resource
  type: registry-image
  source:
    <<: *registry-image-source
    repository: dpb587/github-status-resource
    tag: master
resources:
- name: git-repo
  type: git
  source:
    <<: *git-repo-resource-source
- name: github-pre-release
  type: github-release
  source:
    owner: spring-gradle-plugins
    repository: compatibility-test-plugin
    access_token: ((github-ci-release-token))
    pre_release: true
- name: github-release
  type: github-release
  icon: briefcase-download
  source:
    owner: spring-gradle-plugins
    repository: compatibility-test-plugin
    access_token: ((github-ci-release-token))
    pre_release: false
- name: ci-images-git-repo
  type: git
  icon: github
  source:
    uri: ((github-repo))
    branch: ((branch))
    paths: ["ci/images/*"]
- name: ci-image
  type: registry-image
  icon: docker
  source:
    <<: *registry-image-source
    repository: ((docker-hub-organization))/compatibility-test-plugin-ci
    tag: ((branch))
- name: artifactory-repo
  type: artifactory-resource
  icon: package-variant
  source:
    uri: ((artifactory-server))
    username: ((artifactory-username))
    password: ((artifactory-password))
    build_name: ((build-name))
- name: repo-status-build
  type: github-status-resource
  icon: eye-check-outline
  source:
    repository: ((github-repo-name))
    access_token: ((github-ci-status-token))
    branch: ((branch))
    context: build
jobs:
- name: build-ci-images
  plan:
  - get: ci-images-git-repo
    trigger: true
  - get: git-repo
  - task: build-ci-image
    privileged: true
    file: git-repo/ci/tasks/build-ci-image.yml
    output_mapping:
      image: ci-image
    vars:
      ci-image-name: ci-image
  - put: ci-image
    params:
      image: ci-image/image.tar
- name: build
  serial: true
  public: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: true
  - put: repo-status-build
    params: { state: "pending", commit: "git-repo" }
  - do:
    - task: build-project
      image: ci-image
      <<: *build-project-task-params
    on_failure:
      do:
      - put: repo-status-build
        params: { state: "failure", commit: "git-repo" }
  - put: repo-status-build
    params: { state: "success", commit: "git-repo" }
  - put: artifactory-repo
    params:
      <<: *artifactory-repo-put-params
    get_params:
      threads: 8
- name: stage-milestone
  serial: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: false
  - task: stage
    image: ci-image
    file: git-repo/ci/tasks/stage.yml
    params:
      RELEASE_TYPE: M
      <<: *gradle-enterprise-task-params
  - put: artifactory-repo
    params:
      <<: *artifactory-repo-put-params
      repo: libs-staging-local
  - put: git-repo
    params:
      repository: stage-git-repo
- name: stage-rc
  serial: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: false
  - task: stage
    image: ci-image
    file: git-repo/ci/tasks/stage.yml
    params:
      RELEASE_TYPE: RC
      <<: *gradle-enterprise-task-params
  - put: artifactory-repo
    params:
      <<: *artifactory-repo-put-params
      repo: libs-staging-local
  - put: git-repo
    params:
      repository: stage-git-repo
- name: stage-release
  serial: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: false
  - task: stage
    image: ci-image
    file: git-repo/ci/tasks/stage.yml
    params:
      RELEASE_TYPE: RELEASE
      <<: *gradle-enterprise-task-params
  - put: artifactory-repo
    params:
      <<: *artifactory-repo-put-params
      repo: libs-staging-local
  - put: git-repo
    params:
      repository: stage-git-repo
- name: promote-milestone
  serial: true
  plan:
  - get: git-repo
    trigger: false
  - get: artifactory-repo
    trigger: false
    passed: [stage-milestone]
    params:
      download_artifacts: false
      save_build_info: true
  - task: promote
    file: git-repo/ci/tasks/promote.yml
    params:
      RELEASE_TYPE: M
      <<: *artifactory-task-params
  - task: generate-changelog
    file: git-repo/ci/tasks/generate-changelog.yml
    params:
      RELEASE_TYPE: M
      GITHUB_USERNAME: ((github-username))
      GITHUB_TOKEN: ((github-ci-release-token))
  - put: github-pre-release
    params:
      name: generated-changelog/tag
      tag: generated-changelog/tag
      body: generated-changelog/changelog.md
- name: promote-rc
  serial: true
  plan:
  - get: git-repo
    trigger: false
  - get: artifactory-repo
    trigger: false
    passed: [stage-rc]
    params:
      download_artifacts: false
      save_build_info: true
  - task: promote
    file: git-repo/ci/tasks/promote.yml
    params:
      RELEASE_TYPE: RC
      <<: *artifactory-task-params
  - task: generate-changelog
    file: git-repo/ci/tasks/generate-changelog.yml
    params:
      RELEASE_TYPE: RC
      GITHUB_USERNAME: ((github-username))
      GITHUB_TOKEN: ((github-ci-release-token))
  - put: github-pre-release
    params:
      name: generated-changelog/tag
      tag: generated-changelog/tag
      body: generated-changelog/changelog.md
- name: promote-release
  serial: true
  plan:
  - get: git-repo
    trigger: false
  - get: artifactory-repo
    trigger: false
    passed: [stage-release]
    params:
      download_artifacts: true
      save_build_info: true
  - task: promote
    file: git-repo/ci/tasks/promote.yml
    params:
      RELEASE_TYPE: RELEASE
      SONATYPE_USERNAME: ((s01-user-token))
      SONATYPE_PASSWORD: ((s01-user-token-password))
      SONATYPE_URL: ((sonatype-url))
      SONATYPE_STAGING_PROFILE_ID: ((sonatype-staging-profile-id))
      <<: *artifactory-task-params
  - task: generate-changelog
    file: git-repo/ci/tasks/generate-changelog.yml
    params:
      RELEASE_TYPE: RELEASE
      GITHUB_USERNAME: ((github-username))
      GITHUB_TOKEN: ((github-ci-release-token))
  - put: github-release
    params:
      name: generated-changelog/tag
      tag: generated-changelog/tag
      body: generated-changelog/changelog.md
groups:
- name: "build"
  jobs: ["build"]
- name: "release"
  jobs: ["stage-milestone", "stage-rc", "stage-release", "promote-milestone", "promote-rc", "promote-release"]
- name: "ci-image"
  jobs: ["build-ci-images"]
